# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile:
    name: Compilación
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Compilar el proyecto
        run: mvn clean compile

  unit-test:
    name: Pruebas unitarias
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Ejecutar pruebas unitarias
        run: mvn test

  integration-test:
    name: Pruebas de integración
    runs-on: ubuntu-latest
    services:
      selenium:
        image: selenium/standalone-chrome
        options: --shm-size=512m
        ports:
          - 4444:4444
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: Wait for Selenium to be ready
        run: |
          for i in {1..30}; do
            curl -s http://localhost:4444/wd/hub/status && break
            echo "Esperando que Selenium esté listo..."
            sleep 1
          done

      - name: Ejecutar pruebas de integración y Selenium
        run: mvn verify

#       run: mvn verify -Dmaven.test.failure.ignore=true


#     - name: SonarCloud Scan
#       uses: sonarsource/sonarcloud-github-action@master
#       env:
#       GITHUB TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       SONAR TOKEN: ${{ secrets.SONAR_TOKEN }}
